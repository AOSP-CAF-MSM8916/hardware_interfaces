/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.gnss@2.0;

import @1.0::IGnssCallback;
import @1.1::IGnssCallback;

/**
 * The interface is required for the HAL to communicate certain information
 * like status and location info back to the platform, the platform implements
 * the interfaces and passes a handle to the HAL.
 */
interface IGnssCallback extends @1.1::IGnssCallback {

    /** Flags for the gnssSetCapabilities callback. */
    @export(name="", value_prefix="GPS_CAPABILITY_")
    enum Capabilities : @1.0::IGnssCallback.Capabilities {
        /** GNSS supports line-of-sight satellite identification measurement Corrections */
        MEASUREMENT_CORRECTIONS_LOS_SATS                        = 1 << 8,
        /** GNSS supports per satellite excess-path-length measurement Corrections */
        MEASUREMENT_CORRECTIONS_EXCESS_PATH_LENGTH              = 1 << 9,
        /** GNSS supports reflecting planes measurement Corrections */
        MEASUREMENT_CORRECTIONS_REFLECTING_PLANE                = 1 << 10
    };

    /**
     * Callback to inform framework of the GNSS engine's capabilities.
     *
     * @param capabilities Capability parameter is a bit field of the Capabilities enum.
     */
    gnssSetCapabilitiesCb_2_0(bitfield<Capabilities> capabilities);

};